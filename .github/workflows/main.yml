name: FastAPI CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      
      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest tests
      
      - name: Package API
        run: |
          cd ./venv/lib/python3.12/site-packages
          zip -r9 ../../../../api.zip .
          cd ../../../../api
          zip -g ../api.zip -r .
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: api.zip

  CD:
    runs-on: ubuntu-latest
    needs: [ CI ]
    steps:
      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Descargar el artefacto de Lambda
        uses: actions/download-artifact@v4
        with:
          name: api
          path: .

      - name: Verificar que el archivo existe
        run: ls -lah api.zip

      - name: Subir a S3
        run: aws s3 cp api.zip s3://${{ secrets.AWS_S3_BUCKET }}/api.zip

      - name: Actualizar el c贸digo de la funci贸n Lambda
        run: aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --s3-key api.zip

      - name: Esperar a que termine la actualizaci贸n de Lambda
        run: |
          while true; do
            STATUS=$(aws lambda get-function-configuration --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --query "LastUpdateStatus" --output text)
            echo "Estado actual de Lambda: $STATUS"
            if [[ "$STATUS" == "Successful" ]]; then
              break
            fi
            sleep 5
          done

      - name: Publicar nueva versi贸n de la Lambda
        run: aws lambda publish-version --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }}
